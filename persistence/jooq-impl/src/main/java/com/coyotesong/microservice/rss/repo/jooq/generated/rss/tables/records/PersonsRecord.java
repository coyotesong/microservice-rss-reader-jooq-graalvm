/*
 * This file is generated by jOOQ.
 */
package com.coyotesong.microservice.rss.repo.jooq.generated.rss.tables.records;


import com.coyotesong.microservice.rss.repo.jooq.generated.rss.tables.Persons;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import java.time.Instant;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class PersonsRecord extends UpdatableRecordImpl<PersonsRecord> implements Record5<Long, Instant, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>rss.persons.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>rss.persons.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>rss.persons.timestamp</code>.
     */
    public void setTimestamp(Instant value) {
        set(1, value);
    }

    /**
     * Getter for <code>rss.persons.timestamp</code>.
     */
    public Instant getTimestamp() {
        return (Instant) get(1);
    }

    /**
     * Setter for <code>rss.persons.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>rss.persons.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>rss.persons.email</code>.
     */
    public void setEmail(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>rss.persons.email</code>.
     */
    public String getEmail() {
        return (String) get(3);
    }

    /**
     * Setter for <code>rss.persons.uri</code>.
     */
    public void setUri(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>rss.persons.uri</code>.
     */
    public String getUri() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Instant, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Instant, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Persons.PERSONS.ID;
    }

    @Override
    public Field<Instant> field2() {
        return Persons.PERSONS.TIMESTAMP;
    }

    @Override
    public Field<String> field3() {
        return Persons.PERSONS.NAME;
    }

    @Override
    public Field<String> field4() {
        return Persons.PERSONS.EMAIL;
    }

    @Override
    public Field<String> field5() {
        return Persons.PERSONS.URI;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Instant component2() {
        return getTimestamp();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getEmail();
    }

    @Override
    public String component5() {
        return getUri();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Instant value2() {
        return getTimestamp();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getEmail();
    }

    @Override
    public String value5() {
        return getUri();
    }

    @Override
    public PersonsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PersonsRecord value2(Instant value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public PersonsRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public PersonsRecord value4(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public PersonsRecord value5(String value) {
        setUri(value);
        return this;
    }

    @Override
    public PersonsRecord values(Long value1, Instant value2, String value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PersonsRecord
     */
    public PersonsRecord() {
        super(Persons.PERSONS);
    }

    /**
     * Create a detached, initialised PersonsRecord
     */
    public PersonsRecord(Long id, Instant timestamp, String name, String email, String uri) {
        super(Persons.PERSONS);

        setId(id);
        setTimestamp(timestamp);
        setName(name);
        setEmail(email);
        setUri(uri);
        resetChangedOnNotNull();
    }
}
