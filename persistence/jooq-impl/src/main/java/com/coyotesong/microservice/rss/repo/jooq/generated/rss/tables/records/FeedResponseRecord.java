/*
 * This file is generated by jOOQ.
 */
package com.coyotesong.microservice.rss.repo.jooq.generated.rss.tables.records;


import com.coyotesong.microservice.rss.repo.jooq.generated.rss.tables.FeedResponse;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;

import java.net.URL;
import java.time.Instant;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class FeedResponseRecord extends UpdatableRecordImpl<FeedResponseRecord> implements Record12<Long, Instant, URL, Integer, Boolean, String, String, String, Instant, Instant, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>rss.feed_response.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>rss.feed_response.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>rss.feed_response.timestamp</code>.
     */
    public void setTimestamp(Instant value) {
        set(1, value);
    }

    /**
     * Getter for <code>rss.feed_response.timestamp</code>.
     */
    public Instant getTimestamp() {
        return (Instant) get(1);
    }

    /**
     * Setter for <code>rss.feed_response.url</code>.
     */
    public void setUrl(URL value) {
        set(2, value);
    }

    /**
     * Getter for <code>rss.feed_response.url</code>.
     */
    public URL getUrl() {
        return (URL) get(2);
    }

    /**
     * Setter for <code>rss.feed_response.status_code</code>.
     */
    public void setStatusCode(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>rss.feed_response.status_code</code>.
     */
    public Integer getStatusCode() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>rss.feed_response.requires_authentication</code>.
     */
    public void setRequiresAuthentication(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>rss.feed_response.requires_authentication</code>.
     */
    public Boolean getRequiresAuthentication() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>rss.feed_response.content_type</code>.
     */
    public void setContentType(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>rss.feed_response.content_type</code>.
     */
    public String getContentType() {
        return (String) get(5);
    }

    /**
     * Setter for <code>rss.feed_response.charset</code>.
     */
    public void setCharset(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>rss.feed_response.charset</code>.
     */
    public String getCharset() {
        return (String) get(6);
    }

    /**
     * Setter for <code>rss.feed_response.etag</code>.
     */
    public void setEtag(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>rss.feed_response.etag</code>.
     */
    public String getEtag() {
        return (String) get(7);
    }

    /**
     * Setter for <code>rss.feed_response.expires</code>.
     */
    public void setExpires(Instant value) {
        set(8, value);
    }

    /**
     * Getter for <code>rss.feed_response.expires</code>.
     */
    public Instant getExpires() {
        return (Instant) get(8);
    }

    /**
     * Setter for <code>rss.feed_response.last_modified</code>.
     */
    public void setLastModified(Instant value) {
        set(9, value);
    }

    /**
     * Getter for <code>rss.feed_response.last_modified</code>.
     */
    public Instant getLastModified() {
        return (Instant) get(9);
    }

    /**
     * Setter for <code>rss.feed_response.cache_control</code>.
     */
    public void setCacheControl(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>rss.feed_response.cache_control</code>.
     */
    public String getCacheControl() {
        return (String) get(10);
    }

    /**
     * Setter for <code>rss.feed_response.pragma</code>.
     */
    public void setPragma(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>rss.feed_response.pragma</code>.
     */
    public String getPragma() {
        return (String) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<Long, Instant, URL, Integer, Boolean, String, String, String, Instant, Instant, String, String> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<Long, Instant, URL, Integer, Boolean, String, String, String, Instant, Instant, String, String> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return FeedResponse.FEED_RESPONSE.ID;
    }

    @Override
    public Field<Instant> field2() {
        return FeedResponse.FEED_RESPONSE.TIMESTAMP;
    }

    @Override
    public Field<URL> field3() {
        return FeedResponse.FEED_RESPONSE.URL;
    }

    @Override
    public Field<Integer> field4() {
        return FeedResponse.FEED_RESPONSE.STATUS_CODE;
    }

    @Override
    public Field<Boolean> field5() {
        return FeedResponse.FEED_RESPONSE.REQUIRES_AUTHENTICATION;
    }

    @Override
    public Field<String> field6() {
        return FeedResponse.FEED_RESPONSE.CONTENT_TYPE;
    }

    @Override
    public Field<String> field7() {
        return FeedResponse.FEED_RESPONSE.CHARSET;
    }

    @Override
    public Field<String> field8() {
        return FeedResponse.FEED_RESPONSE.ETAG;
    }

    @Override
    public Field<Instant> field9() {
        return FeedResponse.FEED_RESPONSE.EXPIRES;
    }

    @Override
    public Field<Instant> field10() {
        return FeedResponse.FEED_RESPONSE.LAST_MODIFIED;
    }

    @Override
    public Field<String> field11() {
        return FeedResponse.FEED_RESPONSE.CACHE_CONTROL;
    }

    @Override
    public Field<String> field12() {
        return FeedResponse.FEED_RESPONSE.PRAGMA;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Instant component2() {
        return getTimestamp();
    }

    @Override
    public URL component3() {
        return getUrl();
    }

    @Override
    public Integer component4() {
        return getStatusCode();
    }

    @Override
    public Boolean component5() {
        return getRequiresAuthentication();
    }

    @Override
    public String component6() {
        return getContentType();
    }

    @Override
    public String component7() {
        return getCharset();
    }

    @Override
    public String component8() {
        return getEtag();
    }

    @Override
    public Instant component9() {
        return getExpires();
    }

    @Override
    public Instant component10() {
        return getLastModified();
    }

    @Override
    public String component11() {
        return getCacheControl();
    }

    @Override
    public String component12() {
        return getPragma();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Instant value2() {
        return getTimestamp();
    }

    @Override
    public URL value3() {
        return getUrl();
    }

    @Override
    public Integer value4() {
        return getStatusCode();
    }

    @Override
    public Boolean value5() {
        return getRequiresAuthentication();
    }

    @Override
    public String value6() {
        return getContentType();
    }

    @Override
    public String value7() {
        return getCharset();
    }

    @Override
    public String value8() {
        return getEtag();
    }

    @Override
    public Instant value9() {
        return getExpires();
    }

    @Override
    public Instant value10() {
        return getLastModified();
    }

    @Override
    public String value11() {
        return getCacheControl();
    }

    @Override
    public String value12() {
        return getPragma();
    }

    @Override
    public FeedResponseRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public FeedResponseRecord value2(Instant value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public FeedResponseRecord value3(URL value) {
        setUrl(value);
        return this;
    }

    @Override
    public FeedResponseRecord value4(Integer value) {
        setStatusCode(value);
        return this;
    }

    @Override
    public FeedResponseRecord value5(Boolean value) {
        setRequiresAuthentication(value);
        return this;
    }

    @Override
    public FeedResponseRecord value6(String value) {
        setContentType(value);
        return this;
    }

    @Override
    public FeedResponseRecord value7(String value) {
        setCharset(value);
        return this;
    }

    @Override
    public FeedResponseRecord value8(String value) {
        setEtag(value);
        return this;
    }

    @Override
    public FeedResponseRecord value9(Instant value) {
        setExpires(value);
        return this;
    }

    @Override
    public FeedResponseRecord value10(Instant value) {
        setLastModified(value);
        return this;
    }

    @Override
    public FeedResponseRecord value11(String value) {
        setCacheControl(value);
        return this;
    }

    @Override
    public FeedResponseRecord value12(String value) {
        setPragma(value);
        return this;
    }

    @Override
    public FeedResponseRecord values(Long value1, Instant value2, URL value3, Integer value4, Boolean value5, String value6, String value7, String value8, Instant value9, Instant value10, String value11, String value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FeedResponseRecord
     */
    public FeedResponseRecord() {
        super(FeedResponse.FEED_RESPONSE);
    }

    /**
     * Create a detached, initialised FeedResponseRecord
     */
    public FeedResponseRecord(Long id, Instant timestamp, URL url, Integer statusCode, Boolean requiresAuthentication, String contentType, String charset, String etag, Instant expires, Instant lastModified, String cacheControl, String pragma) {
        super(FeedResponse.FEED_RESPONSE);

        setId(id);
        setTimestamp(timestamp);
        setUrl(url);
        setStatusCode(statusCode);
        setRequiresAuthentication(requiresAuthentication);
        setContentType(contentType);
        setCharset(charset);
        setEtag(etag);
        setExpires(expires);
        setLastModified(lastModified);
        setCacheControl(cacheControl);
        setPragma(pragma);
        resetChangedOnNotNull();
    }
}
