/*
 * This file is generated by jOOQ.
 */
package com.coyotesong.microservice.rss.repo.jooq.generated.rome.tables.records;


import com.coyotesong.microservice.rss.repo.jooq.generated.rome.tables.Outlines;
import org.jooq.Field;
import org.jooq.Record12;
import org.jooq.Record2;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;

import java.net.URL;
import java.time.Instant;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class OutlinesRecord extends UpdatableRecordImpl<OutlinesRecord> implements Record12<Long, Integer, Instant, Instant, String, Boolean, Boolean, URL, String, String, String, URL> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>rome.outlines.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>rome.outlines.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>rome.outlines.position</code>.
     */
    public void setPosition(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>rome.outlines.position</code>.
     */
    public Integer getPosition() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>rome.outlines.timestamp</code>.
     */
    public void setTimestamp(Instant value) {
        set(2, value);
    }

    /**
     * Getter for <code>rome.outlines.timestamp</code>.
     */
    public Instant getTimestamp() {
        return (Instant) get(2);
    }

    /**
     * Setter for <code>rome.outlines.created_date</code>.
     */
    public void setCreatedDate(Instant value) {
        set(3, value);
    }

    /**
     * Getter for <code>rome.outlines.created_date</code>.
     */
    public Instant getCreatedDate() {
        return (Instant) get(3);
    }

    /**
     * Setter for <code>rome.outlines.encoding</code>.
     */
    public void setEncoding(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>rome.outlines.encoding</code>.
     */
    public String getEncoding() {
        return (String) get(4);
    }

    /**
     * Setter for <code>rome.outlines.is_breakpoint</code>.
     */
    public void setIsBreakpoint(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>rome.outlines.is_breakpoint</code>.
     */
    public Boolean getIsBreakpoint() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>rome.outlines.is_comment</code>.
     */
    public void setIsComment(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>rome.outlines.is_comment</code>.
     */
    public Boolean getIsComment() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>rome.outlines.html_url</code>.
     */
    public void setHtmlUrl(URL value) {
        set(7, value);
    }

    /**
     * Getter for <code>rome.outlines.html_url</code>.
     */
    public URL getHtmlUrl() {
        return (URL) get(7);
    }

    /**
     * Setter for <code>rome.outlines.text</code>.
     */
    public void setText(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>rome.outlines.text</code>.
     */
    public String getText() {
        return (String) get(8);
    }

    /**
     * Setter for <code>rome.outlines.title</code>.
     */
    public void setTitle(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>rome.outlines.title</code>.
     */
    public String getTitle() {
        return (String) get(9);
    }

    /**
     * Setter for <code>rome.outlines.type</code>.
     */
    public void setType(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>rome.outlines.type</code>.
     */
    public String getType() {
        return (String) get(10);
    }

    /**
     * Setter for <code>rome.outlines.xml_url</code>.
     */
    public void setXmlUrl(URL value) {
        set(11, value);
    }

    /**
     * Getter for <code>rome.outlines.xml_url</code>.
     */
    public URL getXmlUrl() {
        return (URL) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<Long, Integer, Instant, Instant, String, Boolean, Boolean, URL, String, String, String, URL> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<Long, Integer, Instant, Instant, String, Boolean, Boolean, URL, String, String, String, URL> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Outlines.OUTLINES.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Outlines.OUTLINES.POSITION;
    }

    @Override
    public Field<Instant> field3() {
        return Outlines.OUTLINES.TIMESTAMP;
    }

    @Override
    public Field<Instant> field4() {
        return Outlines.OUTLINES.CREATED_DATE;
    }

    @Override
    public Field<String> field5() {
        return Outlines.OUTLINES.ENCODING;
    }

    @Override
    public Field<Boolean> field6() {
        return Outlines.OUTLINES.IS_BREAKPOINT;
    }

    @Override
    public Field<Boolean> field7() {
        return Outlines.OUTLINES.IS_COMMENT;
    }

    @Override
    public Field<URL> field8() {
        return Outlines.OUTLINES.HTML_URL;
    }

    @Override
    public Field<String> field9() {
        return Outlines.OUTLINES.TEXT;
    }

    @Override
    public Field<String> field10() {
        return Outlines.OUTLINES.TITLE;
    }

    @Override
    public Field<String> field11() {
        return Outlines.OUTLINES.TYPE;
    }

    @Override
    public Field<URL> field12() {
        return Outlines.OUTLINES.XML_URL;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getPosition();
    }

    @Override
    public Instant component3() {
        return getTimestamp();
    }

    @Override
    public Instant component4() {
        return getCreatedDate();
    }

    @Override
    public String component5() {
        return getEncoding();
    }

    @Override
    public Boolean component6() {
        return getIsBreakpoint();
    }

    @Override
    public Boolean component7() {
        return getIsComment();
    }

    @Override
    public URL component8() {
        return getHtmlUrl();
    }

    @Override
    public String component9() {
        return getText();
    }

    @Override
    public String component10() {
        return getTitle();
    }

    @Override
    public String component11() {
        return getType();
    }

    @Override
    public URL component12() {
        return getXmlUrl();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getPosition();
    }

    @Override
    public Instant value3() {
        return getTimestamp();
    }

    @Override
    public Instant value4() {
        return getCreatedDate();
    }

    @Override
    public String value5() {
        return getEncoding();
    }

    @Override
    public Boolean value6() {
        return getIsBreakpoint();
    }

    @Override
    public Boolean value7() {
        return getIsComment();
    }

    @Override
    public URL value8() {
        return getHtmlUrl();
    }

    @Override
    public String value9() {
        return getText();
    }

    @Override
    public String value10() {
        return getTitle();
    }

    @Override
    public String value11() {
        return getType();
    }

    @Override
    public URL value12() {
        return getXmlUrl();
    }

    @Override
    public OutlinesRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public OutlinesRecord value2(Integer value) {
        setPosition(value);
        return this;
    }

    @Override
    public OutlinesRecord value3(Instant value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public OutlinesRecord value4(Instant value) {
        setCreatedDate(value);
        return this;
    }

    @Override
    public OutlinesRecord value5(String value) {
        setEncoding(value);
        return this;
    }

    @Override
    public OutlinesRecord value6(Boolean value) {
        setIsBreakpoint(value);
        return this;
    }

    @Override
    public OutlinesRecord value7(Boolean value) {
        setIsComment(value);
        return this;
    }

    @Override
    public OutlinesRecord value8(URL value) {
        setHtmlUrl(value);
        return this;
    }

    @Override
    public OutlinesRecord value9(String value) {
        setText(value);
        return this;
    }

    @Override
    public OutlinesRecord value10(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public OutlinesRecord value11(String value) {
        setType(value);
        return this;
    }

    @Override
    public OutlinesRecord value12(URL value) {
        setXmlUrl(value);
        return this;
    }

    @Override
    public OutlinesRecord values(Long value1, Integer value2, Instant value3, Instant value4, String value5, Boolean value6, Boolean value7, URL value8, String value9, String value10, String value11, URL value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OutlinesRecord
     */
    public OutlinesRecord() {
        super(Outlines.OUTLINES);
    }

    /**
     * Create a detached, initialised OutlinesRecord
     */
    public OutlinesRecord(Long id, Integer position, Instant timestamp, Instant createdDate, String encoding, Boolean isBreakpoint, Boolean isComment, URL htmlUrl, String text, String title, String type, URL xmlUrl) {
        super(Outlines.OUTLINES);

        setId(id);
        setPosition(position);
        setTimestamp(timestamp);
        setCreatedDate(createdDate);
        setEncoding(encoding);
        setIsBreakpoint(isBreakpoint);
        setIsComment(isComment);
        setHtmlUrl(htmlUrl);
        setText(text);
        setTitle(title);
        setType(type);
        setXmlUrl(xmlUrl);
        resetChangedOnNotNull();
    }
}
