/*
 * This file is generated by jOOQ.
 */
package com.coyotesong.microservice.rss.repo.jooq.generated.rome;


import com.coyotesong.microservice.rss.repo.jooq.generated.rome.tables.Opml;
import com.coyotesong.microservice.rss.repo.jooq.generated.rome.tables.OpmlBody;
import com.coyotesong.microservice.rss.repo.jooq.generated.rome.tables.Outlines;
import com.coyotesong.microservice.rss.repo.jooq.generated.rome.tables.WireFeeds;
import com.coyotesong.microservice.rss.repo.jooq.generated.rome.tables.records.OpmlBodyRecord;
import com.coyotesong.microservice.rss.repo.jooq.generated.rome.tables.records.OpmlRecord;
import com.coyotesong.microservice.rss.repo.jooq.generated.rome.tables.records.OutlinesRecord;
import com.coyotesong.microservice.rss.repo.jooq.generated.rome.tables.records.WireFeedsRecord;
import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * rome.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<OpmlRecord> ROME_OPML_PKEY = Internal.createUniqueKey(Opml.OPML, DSL.name("rome_opml_pkey"), new TableField[]{Opml.OPML.ID}, true);
    public static final UniqueKey<OpmlBodyRecord> ROME_OPML_CONTENT_PKEY = Internal.createUniqueKey(OpmlBody.OPML_BODY, DSL.name("rome_opml_content_pkey"), new TableField[]{OpmlBody.OPML_BODY.ID}, true);
    public static final UniqueKey<OutlinesRecord> ROME_OUTLINES_PKEY = Internal.createUniqueKey(Outlines.OUTLINES, DSL.name("rome_outlines_pkey"), new TableField[]{Outlines.OUTLINES.ID, Outlines.OUTLINES.POSITION}, true);
    public static final UniqueKey<WireFeedsRecord> ROME_WIRE_FEEDS_PKEY = Internal.createUniqueKey(WireFeeds.WIRE_FEEDS, DSL.name("rome_wire_feeds_pkey"), new TableField[]{WireFeeds.WIRE_FEEDS.ID}, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<OutlinesRecord, OpmlRecord> OUTLINES__OUTLINES_OPML_FKEY = Internal.createForeignKey(Outlines.OUTLINES, DSL.name("outlines_opml_fkey"), new TableField[]{Outlines.OUTLINES.ID}, Keys.ROME_OPML_PKEY, new TableField[]{Opml.OPML.ID}, true);
}
