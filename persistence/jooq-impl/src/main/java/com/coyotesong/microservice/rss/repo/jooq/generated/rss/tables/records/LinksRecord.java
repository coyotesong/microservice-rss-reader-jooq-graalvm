/*
 * This file is generated by jOOQ.
 */
package com.coyotesong.microservice.rss.repo.jooq.generated.rss.tables.records;


import com.coyotesong.microservice.rss.repo.jooq.generated.rss.tables.Links;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;

import java.net.URL;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class LinksRecord extends UpdatableRecordImpl<LinksRecord> implements Record9<Long, Long, Integer, String, String, URL, String, Long, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>rss.links.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>rss.links.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>rss.links.entry_id</code>.
     */
    public void setEntryId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>rss.links.entry_id</code>.
     */
    public Long getEntryId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>rss.links.position</code>.
     */
    public void setPosition(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>rss.links.position</code>.
     */
    public Integer getPosition() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>rss.links.title</code>.
     */
    public void setTitle(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>rss.links.title</code>.
     */
    public String getTitle() {
        return (String) get(3);
    }

    /**
     * Setter for <code>rss.links.type</code>.
     */
    public void setType(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>rss.links.type</code>.
     */
    public String getType() {
        return (String) get(4);
    }

    /**
     * Setter for <code>rss.links.href</code>.
     */
    public void setHref(URL value) {
        set(5, value);
    }

    /**
     * Getter for <code>rss.links.href</code>.
     */
    public URL getHref() {
        return (URL) get(5);
    }

    /**
     * Setter for <code>rss.links.href_lang</code>.
     */
    public void setHrefLang(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>rss.links.href_lang</code>.
     */
    public String getHrefLang() {
        return (String) get(6);
    }

    /**
     * Setter for <code>rss.links.length</code>.
     */
    public void setLength(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>rss.links.length</code>.
     */
    public Long getLength() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>rss.links.rel</code>.
     */
    public void setRel(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>rss.links.rel</code>.
     */
    public String getRel() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, Long, Integer, String, String, URL, String, Long, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Long, Long, Integer, String, String, URL, String, Long, String> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Links.LINKS.ID;
    }

    @Override
    public Field<Long> field2() {
        return Links.LINKS.ENTRY_ID;
    }

    @Override
    public Field<Integer> field3() {
        return Links.LINKS.POSITION;
    }

    @Override
    public Field<String> field4() {
        return Links.LINKS.TITLE;
    }

    @Override
    public Field<String> field5() {
        return Links.LINKS.TYPE;
    }

    @Override
    public Field<URL> field6() {
        return Links.LINKS.HREF;
    }

    @Override
    public Field<String> field7() {
        return Links.LINKS.HREF_LANG;
    }

    @Override
    public Field<Long> field8() {
        return Links.LINKS.LENGTH;
    }

    @Override
    public Field<String> field9() {
        return Links.LINKS.REL;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getEntryId();
    }

    @Override
    public Integer component3() {
        return getPosition();
    }

    @Override
    public String component4() {
        return getTitle();
    }

    @Override
    public String component5() {
        return getType();
    }

    @Override
    public URL component6() {
        return getHref();
    }

    @Override
    public String component7() {
        return getHrefLang();
    }

    @Override
    public Long component8() {
        return getLength();
    }

    @Override
    public String component9() {
        return getRel();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getEntryId();
    }

    @Override
    public Integer value3() {
        return getPosition();
    }

    @Override
    public String value4() {
        return getTitle();
    }

    @Override
    public String value5() {
        return getType();
    }

    @Override
    public URL value6() {
        return getHref();
    }

    @Override
    public String value7() {
        return getHrefLang();
    }

    @Override
    public Long value8() {
        return getLength();
    }

    @Override
    public String value9() {
        return getRel();
    }

    @Override
    public LinksRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public LinksRecord value2(Long value) {
        setEntryId(value);
        return this;
    }

    @Override
    public LinksRecord value3(Integer value) {
        setPosition(value);
        return this;
    }

    @Override
    public LinksRecord value4(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public LinksRecord value5(String value) {
        setType(value);
        return this;
    }

    @Override
    public LinksRecord value6(URL value) {
        setHref(value);
        return this;
    }

    @Override
    public LinksRecord value7(String value) {
        setHrefLang(value);
        return this;
    }

    @Override
    public LinksRecord value8(Long value) {
        setLength(value);
        return this;
    }

    @Override
    public LinksRecord value9(String value) {
        setRel(value);
        return this;
    }

    @Override
    public LinksRecord values(Long value1, Long value2, Integer value3, String value4, String value5, URL value6, String value7, Long value8, String value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LinksRecord
     */
    public LinksRecord() {
        super(Links.LINKS);
    }

    /**
     * Create a detached, initialised LinksRecord
     */
    public LinksRecord(Long id, Long entryId, Integer position, String title, String type, URL href, String hrefLang, Long length, String rel) {
        super(Links.LINKS);

        setId(id);
        setEntryId(entryId);
        setPosition(position);
        setTitle(title);
        setType(type);
        setHref(href);
        setHrefLang(hrefLang);
        setLength(length);
        setRel(rel);
        resetChangedOnNotNull();
    }
}
