/*
 * This file is generated by jOOQ.
 */
package com.coyotesong.microservice.rss.repo.jooq.generated.rss.tables.records;


import com.coyotesong.microservice.rss.repo.jooq.generated.rss.tables.FeedHeaders;
import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class FeedHeadersRecord extends UpdatableRecordImpl<FeedHeadersRecord> implements Record4<Long, String, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>rss.feed_headers.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>rss.feed_headers.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>rss.feed_headers.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>rss.feed_headers.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>rss.feed_headers.position</code>.
     */
    public void setPosition(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>rss.feed_headers.position</code>.
     */
    public Integer getPosition() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>rss.feed_headers.value</code>.
     */
    public void setValue(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>rss.feed_headers.value</code>.
     */
    public String getValue() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record3<Long, String, Integer> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, Integer, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, Integer, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return FeedHeaders.FEED_HEADERS.ID;
    }

    @Override
    public Field<String> field2() {
        return FeedHeaders.FEED_HEADERS.NAME;
    }

    @Override
    public Field<Integer> field3() {
        return FeedHeaders.FEED_HEADERS.POSITION;
    }

    @Override
    public Field<String> field4() {
        return FeedHeaders.FEED_HEADERS.VALUE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Integer component3() {
        return getPosition();
    }

    @Override
    public String component4() {
        return getValue();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Integer value3() {
        return getPosition();
    }

    @Override
    public String value4() {
        return getValue();
    }

    @Override
    public FeedHeadersRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public FeedHeadersRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public FeedHeadersRecord value3(Integer value) {
        setPosition(value);
        return this;
    }

    @Override
    public FeedHeadersRecord value4(String value) {
        setValue(value);
        return this;
    }

    @Override
    public FeedHeadersRecord values(Long value1, String value2, Integer value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FeedHeadersRecord
     */
    public FeedHeadersRecord() {
        super(FeedHeaders.FEED_HEADERS);
    }

    /**
     * Create a detached, initialised FeedHeadersRecord
     */
    public FeedHeadersRecord(Long id, String name, Integer position, String value) {
        super(FeedHeaders.FEED_HEADERS);

        setId(id);
        setName(name);
        setPosition(position);
        setValue(value);
        resetChangedOnNotNull();
    }
}
