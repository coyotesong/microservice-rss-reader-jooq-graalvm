/*
 * This file is generated by jOOQ.
 */
package com.coyotesong.microservice.rss.repo.jooq.generated.rss.tables.records;


import com.coyotesong.microservice.rss.repo.jooq.generated.rss.tables.Contents;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class ContentsRecord extends UpdatableRecordImpl<ContentsRecord> implements Record8<Long, Integer, String, String, String, Integer, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>rss.contents.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>rss.contents.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>rss.contents.position</code>.
     */
    public void setPosition(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>rss.contents.position</code>.
     */
    public Integer getPosition() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>rss.contents.mode</code>.
     */
    public void setMode(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>rss.contents.mode</code>.
     */
    public String getMode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>rss.contents.type</code>.
     */
    public void setType(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>rss.contents.type</code>.
     */
    public String getType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>rss.contents.content_type</code>.
     */
    public void setContentType(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>rss.contents.content_type</code>.
     */
    public String getContentType() {
        return (String) get(4);
    }

    /**
     * Setter for <code>rss.contents.content_length</code>.
     */
    public void setContentLength(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>rss.contents.content_length</code>.
     */
    public Integer getContentLength() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>rss.contents.charset</code>.
     */
    public void setCharset(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>rss.contents.charset</code>.
     */
    public String getCharset() {
        return (String) get(6);
    }

    /**
     * Setter for <code>rss.contents.value</code>.
     */
    public void setValue(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>rss.contents.value</code>.
     */
    public String getValue() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, Integer, String, String, String, Integer, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, Integer, String, String, String, Integer, String, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Contents.CONTENTS.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Contents.CONTENTS.POSITION;
    }

    @Override
    public Field<String> field3() {
        return Contents.CONTENTS.MODE;
    }

    @Override
    public Field<String> field4() {
        return Contents.CONTENTS.TYPE;
    }

    @Override
    public Field<String> field5() {
        return Contents.CONTENTS.CONTENT_TYPE;
    }

    @Override
    public Field<Integer> field6() {
        return Contents.CONTENTS.CONTENT_LENGTH;
    }

    @Override
    public Field<String> field7() {
        return Contents.CONTENTS.CHARSET;
    }

    @Override
    public Field<String> field8() {
        return Contents.CONTENTS.VALUE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getPosition();
    }

    @Override
    public String component3() {
        return getMode();
    }

    @Override
    public String component4() {
        return getType();
    }

    @Override
    public String component5() {
        return getContentType();
    }

    @Override
    public Integer component6() {
        return getContentLength();
    }

    @Override
    public String component7() {
        return getCharset();
    }

    @Override
    public String component8() {
        return getValue();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getPosition();
    }

    @Override
    public String value3() {
        return getMode();
    }

    @Override
    public String value4() {
        return getType();
    }

    @Override
    public String value5() {
        return getContentType();
    }

    @Override
    public Integer value6() {
        return getContentLength();
    }

    @Override
    public String value7() {
        return getCharset();
    }

    @Override
    public String value8() {
        return getValue();
    }

    @Override
    public ContentsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ContentsRecord value2(Integer value) {
        setPosition(value);
        return this;
    }

    @Override
    public ContentsRecord value3(String value) {
        setMode(value);
        return this;
    }

    @Override
    public ContentsRecord value4(String value) {
        setType(value);
        return this;
    }

    @Override
    public ContentsRecord value5(String value) {
        setContentType(value);
        return this;
    }

    @Override
    public ContentsRecord value6(Integer value) {
        setContentLength(value);
        return this;
    }

    @Override
    public ContentsRecord value7(String value) {
        setCharset(value);
        return this;
    }

    @Override
    public ContentsRecord value8(String value) {
        setValue(value);
        return this;
    }

    @Override
    public ContentsRecord values(Long value1, Integer value2, String value3, String value4, String value5, Integer value6, String value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ContentsRecord
     */
    public ContentsRecord() {
        super(Contents.CONTENTS);
    }

    /**
     * Create a detached, initialised ContentsRecord
     */
    public ContentsRecord(Long id, Integer position, String mode, String type, String contentType, Integer contentLength, String charset, String value) {
        super(Contents.CONTENTS);

        setId(id);
        setPosition(position);
        setMode(mode);
        setType(type);
        setContentType(contentType);
        setContentLength(contentLength);
        setCharset(charset);
        setValue(value);
        resetChangedOnNotNull();
    }
}
