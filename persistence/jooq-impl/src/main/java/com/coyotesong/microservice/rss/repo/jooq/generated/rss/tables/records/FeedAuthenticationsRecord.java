/*
 * This file is generated by jOOQ.
 */
package com.coyotesong.microservice.rss.repo.jooq.generated.rss.tables.records;


import com.coyotesong.microservice.rss.repo.jooq.generated.rss.tables.FeedAuthentications;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import java.net.URL;
import java.time.Instant;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class FeedAuthenticationsRecord extends UpdatableRecordImpl<FeedAuthenticationsRecord> implements Record5<Long, Instant, URL, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>rss.feed_authentications.feed_id</code>.
     */
    public void setFeedId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>rss.feed_authentications.feed_id</code>.
     */
    public Long getFeedId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>rss.feed_authentications.timestamp</code>.
     */
    public void setTimestamp(Instant value) {
        set(1, value);
    }

    /**
     * Getter for <code>rss.feed_authentications.timestamp</code>.
     */
    public Instant getTimestamp() {
        return (Instant) get(1);
    }

    /**
     * Setter for <code>rss.feed_authentications.authentication_url</code>.
     */
    public void setAuthenticationUrl(URL value) {
        set(2, value);
    }

    /**
     * Getter for <code>rss.feed_authentications.authentication_url</code>.
     */
    public URL getAuthenticationUrl() {
        return (URL) get(2);
    }

    /**
     * Setter for <code>rss.feed_authentications.username</code>.
     */
    public void setUsername(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>rss.feed_authentications.username</code>.
     */
    public String getUsername() {
        return (String) get(3);
    }

    /**
     * Setter for <code>rss.feed_authentications.password</code>.
     */
    public void setPassword(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>rss.feed_authentications.password</code>.
     */
    public String getPassword() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Instant, URL, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Instant, URL, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return FeedAuthentications.FEED_AUTHENTICATIONS.FEED_ID;
    }

    @Override
    public Field<Instant> field2() {
        return FeedAuthentications.FEED_AUTHENTICATIONS.TIMESTAMP;
    }

    @Override
    public Field<URL> field3() {
        return FeedAuthentications.FEED_AUTHENTICATIONS.AUTHENTICATION_URL;
    }

    @Override
    public Field<String> field4() {
        return FeedAuthentications.FEED_AUTHENTICATIONS.USERNAME;
    }

    @Override
    public Field<String> field5() {
        return FeedAuthentications.FEED_AUTHENTICATIONS.PASSWORD;
    }

    @Override
    public Long component1() {
        return getFeedId();
    }

    @Override
    public Instant component2() {
        return getTimestamp();
    }

    @Override
    public URL component3() {
        return getAuthenticationUrl();
    }

    @Override
    public String component4() {
        return getUsername();
    }

    @Override
    public String component5() {
        return getPassword();
    }

    @Override
    public Long value1() {
        return getFeedId();
    }

    @Override
    public Instant value2() {
        return getTimestamp();
    }

    @Override
    public URL value3() {
        return getAuthenticationUrl();
    }

    @Override
    public String value4() {
        return getUsername();
    }

    @Override
    public String value5() {
        return getPassword();
    }

    @Override
    public FeedAuthenticationsRecord value1(Long value) {
        setFeedId(value);
        return this;
    }

    @Override
    public FeedAuthenticationsRecord value2(Instant value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public FeedAuthenticationsRecord value3(URL value) {
        setAuthenticationUrl(value);
        return this;
    }

    @Override
    public FeedAuthenticationsRecord value4(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public FeedAuthenticationsRecord value5(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public FeedAuthenticationsRecord values(Long value1, Instant value2, URL value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FeedAuthenticationsRecord
     */
    public FeedAuthenticationsRecord() {
        super(FeedAuthentications.FEED_AUTHENTICATIONS);
    }

    /**
     * Create a detached, initialised FeedAuthenticationsRecord
     */
    public FeedAuthenticationsRecord(Long feedId, Instant timestamp, URL authenticationUrl, String username, String password) {
        super(FeedAuthentications.FEED_AUTHENTICATIONS);

        setFeedId(feedId);
        setTimestamp(timestamp);
        setAuthenticationUrl(authenticationUrl);
        setUsername(username);
        setPassword(password);
        resetChangedOnNotNull();
    }
}
