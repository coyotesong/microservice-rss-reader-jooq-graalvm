/*
 * This file is generated by jOOQ.
 */
package com.coyotesong.microservice.rss.repo.jooq.generated.rss.tables.records;


import com.coyotesong.microservice.rss.repo.jooq.generated.rss.tables.Enclosures;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import java.net.URL;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class EnclosuresRecord extends UpdatableRecordImpl<EnclosuresRecord> implements Record4<Long, String, URL, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>rss.enclosures.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>rss.enclosures.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>rss.enclosures.type</code>.
     */
    public void setType(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>rss.enclosures.type</code>.
     */
    public String getType() {
        return (String) get(1);
    }

    /**
     * Setter for <code>rss.enclosures.url</code>.
     */
    public void setUrl(URL value) {
        set(2, value);
    }

    /**
     * Getter for <code>rss.enclosures.url</code>.
     */
    public URL getUrl() {
        return (URL) get(2);
    }

    /**
     * Setter for <code>rss.enclosures.length</code>.
     */
    public void setLength(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>rss.enclosures.length</code>.
     */
    public Long getLength() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, URL, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, URL, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Enclosures.ENCLOSURES.ID;
    }

    @Override
    public Field<String> field2() {
        return Enclosures.ENCLOSURES.TYPE;
    }

    @Override
    public Field<URL> field3() {
        return Enclosures.ENCLOSURES.URL;
    }

    @Override
    public Field<Long> field4() {
        return Enclosures.ENCLOSURES.LENGTH;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getType();
    }

    @Override
    public URL component3() {
        return getUrl();
    }

    @Override
    public Long component4() {
        return getLength();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getType();
    }

    @Override
    public URL value3() {
        return getUrl();
    }

    @Override
    public Long value4() {
        return getLength();
    }

    @Override
    public EnclosuresRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public EnclosuresRecord value2(String value) {
        setType(value);
        return this;
    }

    @Override
    public EnclosuresRecord value3(URL value) {
        setUrl(value);
        return this;
    }

    @Override
    public EnclosuresRecord value4(Long value) {
        setLength(value);
        return this;
    }

    @Override
    public EnclosuresRecord values(Long value1, String value2, URL value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EnclosuresRecord
     */
    public EnclosuresRecord() {
        super(Enclosures.ENCLOSURES);
    }

    /**
     * Create a detached, initialised EnclosuresRecord
     */
    public EnclosuresRecord(Long id, String type, URL url, Long length) {
        super(Enclosures.ENCLOSURES);

        setId(id);
        setType(type);
        setUrl(url);
        setLength(length);
        resetChangedOnNotNull();
    }
}
