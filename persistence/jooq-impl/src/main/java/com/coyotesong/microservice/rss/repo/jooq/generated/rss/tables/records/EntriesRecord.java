/*
 * This file is generated by jOOQ.
 */
package com.coyotesong.microservice.rss.repo.jooq.generated.rss.tables.records;


import com.coyotesong.microservice.rss.repo.jooq.generated.rss.tables.Entries;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;

import java.net.URL;
import java.time.Instant;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class EntriesRecord extends UpdatableRecordImpl<EntriesRecord> implements Record9<Instant, Long, String, String, URL, Integer, Instant, Instant, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>rss.entries.timestamp</code>.
     */
    public void setTimestamp(Instant value) {
        set(0, value);
    }

    /**
     * Getter for <code>rss.entries.timestamp</code>.
     */
    public Instant getTimestamp() {
        return (Instant) get(0);
    }

    /**
     * Setter for <code>rss.entries.id</code>.
     */
    public void setId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>rss.entries.id</code>.
     */
    public Long getId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>rss.entries.title</code>.
     */
    public void setTitle(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>rss.entries.title</code>.
     */
    public String getTitle() {
        return (String) get(2);
    }

    /**
     * Setter for <code>rss.entries.author</code>.
     */
    public void setAuthor(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>rss.entries.author</code>.
     */
    public String getAuthor() {
        return (String) get(3);
    }

    /**
     * Setter for <code>rss.entries.url</code>.
     */
    public void setUrl(URL value) {
        set(4, value);
    }

    /**
     * Getter for <code>rss.entries.url</code>.
     */
    public URL getUrl() {
        return (URL) get(4);
    }

    /**
     * Setter for <code>rss.entries.author_count</code>.
     */
    public void setAuthorCount(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>rss.entries.author_count</code>.
     */
    public Integer getAuthorCount() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>rss.entries.published_date</code>.
     */
    public void setPublishedDate(Instant value) {
        set(6, value);
    }

    /**
     * Getter for <code>rss.entries.published_date</code>.
     */
    public Instant getPublishedDate() {
        return (Instant) get(6);
    }

    /**
     * Setter for <code>rss.entries.updated_date</code>.
     */
    public void setUpdatedDate(Instant value) {
        set(7, value);
    }

    /**
     * Getter for <code>rss.entries.updated_date</code>.
     */
    public Instant getUpdatedDate() {
        return (Instant) get(7);
    }

    /**
     * Setter for <code>rss.entries.link_count</code>.
     */
    public void setLinkCount(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>rss.entries.link_count</code>.
     */
    public Integer getLinkCount() {
        return (Integer) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Instant, Long, String, String, URL, Integer, Instant, Instant, Integer> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Instant, Long, String, String, URL, Integer, Instant, Instant, Integer> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Instant> field1() {
        return Entries.ENTRIES.TIMESTAMP;
    }

    @Override
    public Field<Long> field2() {
        return Entries.ENTRIES.ID;
    }

    @Override
    public Field<String> field3() {
        return Entries.ENTRIES.TITLE;
    }

    @Override
    public Field<String> field4() {
        return Entries.ENTRIES.AUTHOR;
    }

    @Override
    public Field<URL> field5() {
        return Entries.ENTRIES.URL;
    }

    @Override
    public Field<Integer> field6() {
        return Entries.ENTRIES.AUTHOR_COUNT;
    }

    @Override
    public Field<Instant> field7() {
        return Entries.ENTRIES.PUBLISHED_DATE;
    }

    @Override
    public Field<Instant> field8() {
        return Entries.ENTRIES.UPDATED_DATE;
    }

    @Override
    public Field<Integer> field9() {
        return Entries.ENTRIES.LINK_COUNT;
    }

    @Override
    public Instant component1() {
        return getTimestamp();
    }

    @Override
    public Long component2() {
        return getId();
    }

    @Override
    public String component3() {
        return getTitle();
    }

    @Override
    public String component4() {
        return getAuthor();
    }

    @Override
    public URL component5() {
        return getUrl();
    }

    @Override
    public Integer component6() {
        return getAuthorCount();
    }

    @Override
    public Instant component7() {
        return getPublishedDate();
    }

    @Override
    public Instant component8() {
        return getUpdatedDate();
    }

    @Override
    public Integer component9() {
        return getLinkCount();
    }

    @Override
    public Instant value1() {
        return getTimestamp();
    }

    @Override
    public Long value2() {
        return getId();
    }

    @Override
    public String value3() {
        return getTitle();
    }

    @Override
    public String value4() {
        return getAuthor();
    }

    @Override
    public URL value5() {
        return getUrl();
    }

    @Override
    public Integer value6() {
        return getAuthorCount();
    }

    @Override
    public Instant value7() {
        return getPublishedDate();
    }

    @Override
    public Instant value8() {
        return getUpdatedDate();
    }

    @Override
    public Integer value9() {
        return getLinkCount();
    }

    @Override
    public EntriesRecord value1(Instant value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public EntriesRecord value2(Long value) {
        setId(value);
        return this;
    }

    @Override
    public EntriesRecord value3(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public EntriesRecord value4(String value) {
        setAuthor(value);
        return this;
    }

    @Override
    public EntriesRecord value5(URL value) {
        setUrl(value);
        return this;
    }

    @Override
    public EntriesRecord value6(Integer value) {
        setAuthorCount(value);
        return this;
    }

    @Override
    public EntriesRecord value7(Instant value) {
        setPublishedDate(value);
        return this;
    }

    @Override
    public EntriesRecord value8(Instant value) {
        setUpdatedDate(value);
        return this;
    }

    @Override
    public EntriesRecord value9(Integer value) {
        setLinkCount(value);
        return this;
    }

    @Override
    public EntriesRecord values(Instant value1, Long value2, String value3, String value4, URL value5, Integer value6, Instant value7, Instant value8, Integer value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EntriesRecord
     */
    public EntriesRecord() {
        super(Entries.ENTRIES);
    }

    /**
     * Create a detached, initialised EntriesRecord
     */
    public EntriesRecord(Instant timestamp, Long id, String title, String author, URL url, Integer authorCount, Instant publishedDate, Instant updatedDate, Integer linkCount) {
        super(Entries.ENTRIES);

        setTimestamp(timestamp);
        setId(id);
        setTitle(title);
        setAuthor(author);
        setUrl(url);
        setAuthorCount(authorCount);
        setPublishedDate(publishedDate);
        setUpdatedDate(updatedDate);
        setLinkCount(linkCount);
        resetChangedOnNotNull();
    }
}
